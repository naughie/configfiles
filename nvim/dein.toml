[[plugins]]
repo = 'Shougo/dein.vim'

# not compatible with coc
#[[plugins]]
#repo = 'Shougo/deoplete.nvim'
#hook_add = '''
#let g:deoplete#enable_at_startup = 1
#'''

[[plugins]]
repo = 'Shougo/denite.nvim'
hook_add = '''
nnoremap <Space>f :Denite file/rec -split=floating -floating-preview -vertical-preview<CR>
nnoremap <Space>g :Denite grep -split=floating -floating-preview -vertical-preview<CR>

autocmd FileType denite call s:denite_my_settings()
function! s:denite_my_settings() abort
  nnoremap <silent><buffer><expr> <CR>
  \ denite#do_map('do_action')
  nnoremap <silent><buffer><expr> d
  \ denite#do_map('do_action', 'delete')
  nnoremap <silent><buffer><expr> p
  \ denite#do_map('do_action', 'preview')
  nnoremap <silent><buffer><expr> q
  \ denite#do_map('quit')
  nnoremap <silent><buffer><expr> i
  \ denite#do_map('open_filter_buffer')
  nnoremap <silent><buffer><expr> <Space>
  \ denite#do_map('toggle_select').'j'
endfunction

"use ripgrep instead of grep
call denite#custom#var('grep', {
    \ 'command': ['rg'],
    \ 'default_opts': ['-i', '--vimgrep', '--no-heading'],
    \ 'recursive_opts': [],
    \ 'pattern_opt': ['--regexp'],
    \ 'separator': ['--'],
    \ 'final_opts': [],
    \ })
'''

[[plugins]]
repo = 'neoclide/coc.nvim'
merged = '0'
hook_add = '''
let g:coc_global_extensions = ['coc-snippets', 'coc-tsserver', 'coc-rust-analyzer', 'coc-json']

inoremap <silent><expr> <TAB>
      \ pumvisible() ? "\<C-n>" :
      \ <SID>check_back_space() ? "\<TAB>" :
      \ coc#refresh()
inoremap <expr><S-TAB> pumvisible() ? "\<C-p>" : "\<C-h>"

function! s:check_back_space() abort
  let col = col('.') - 1
  return !col || getline('.')[col - 1]  =~# '\s'
endfunction

"inoremap <silent><expr> <C-k> pumvisible() ? coc#_select_confirm() : ""
imap <C-l> <Plug>(coc-snippets-expand)
let g:coc_snippet_next = '<c-j>'
let g:coc_snippet_prev = '<c-k>'
imap <C-j> <Plug>(coc-snippets-expand-jump)

nmap <silent> gd <Plug>(coc-definition)
nmap <silent> gy <Plug>(coc-type-definition)
nmap <silent> gi <Plug>(coc-implementation)
nmap <silent> gr <Plug>(coc-references)
'''

[[plugins]]
repo = 'jacoborus/tender.vim'
hook_add = '''
colorscheme tender
'''
